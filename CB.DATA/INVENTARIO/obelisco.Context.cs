//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CB.DATA.INVENTARIO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class INVENTARIO_CONSTRUCTORA_OBELISCOEntities : DbContext
    {
        public INVENTARIO_CONSTRUCTORA_OBELISCOEntities()
            : base("name=INVENTARIO_CONSTRUCTORA_OBELISCOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Almacen> Almacens { get; set; }
        public virtual DbSet<AlmacenMovimiento> AlmacenMovimientoes { get; set; }
        public virtual DbSet<AlmMovImportacion> AlmMovImportacions { get; set; }
        public virtual DbSet<AlmTraspaso> AlmTraspasoes { get; set; }
        public virtual DbSet<AlmTraspasoAlmInterno> AlmTraspasoAlmInternoes { get; set; }
        public virtual DbSet<AlmTraspasoEnTransito> AlmTraspasoEnTransitoes { get; set; }
        public virtual DbSet<AlmTraspasoZonaFranca> AlmTraspasoZonaFrancas { get; set; }
        public virtual DbSet<Aplicacion> Aplicacions { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Bloque> Bloques { get; set; }
        public virtual DbSet<Caja> Cajas { get; set; }
        public virtual DbSet<Caja_Revertir> Caja_Revertir { get; set; }
        public virtual DbSet<CategoriaVendedor> CategoriaVendedors { get; set; }
        public virtual DbSet<CategoriaVendedorH> CategoriaVendedorHs { get; set; }
        public virtual DbSet<CentroCosto> CentroCostos { get; set; }
        public virtual DbSet<Chequera> Chequeras { get; set; }
        public virtual DbSet<Ciudad> Ciudads { get; set; }
        public virtual DbSet<Clausula> Clausulas { get; set; }
        public virtual DbSet<Clausula1> Clausulas1 { get; set; }
        public virtual DbSet<CodClienteV> CodClienteVs { get; set; }
        public virtual DbSet<ConceptoContable> ConceptoContables { get; set; }
        public virtual DbSet<Contrato> Contratoes { get; set; }
        public virtual DbSet<ContratosLegale> ContratosLegales { get; set; }
        public virtual DbSet<Cotizacion> Cotizacions { get; set; }
        public virtual DbSet<CotizacionDetalle> CotizacionDetalles { get; set; }
        public virtual DbSet<CtaPorCobrar> CtaPorCobrars { get; set; }
        public virtual DbSet<CtaPorCobrar_A> CtaPorCobrar_A { get; set; }
        public virtual DbSet<CtaPorCobrarDet> CtaPorCobrarDets { get; set; }
        public virtual DbSet<CtaxPagar> CtaxPagars { get; set; }
        public virtual DbSet<CtaxPagarCC> CtaxPagarCCs { get; set; }
        public virtual DbSet<CtaxPagarDet> CtaxPagarDets { get; set; }
        public virtual DbSet<CuentaCliente> CuentaClientes { get; set; }
        public virtual DbSet<CuentaClienteMov> CuentaClienteMovs { get; set; }
        public virtual DbSet<Departamento> Departamentoes { get; set; }
        public virtual DbSet<Descuento> Descuentos { get; set; }
        public virtual DbSet<DetallePagInicProforma> DetallePagInicProformas { get; set; }
        public virtual DbSet<DetallePagInicReserva> DetallePagInicReservas { get; set; }
        public virtual DbSet<DetallePagInicVenta> DetallePagInicVentas { get; set; }
        public virtual DbSet<DetallePagInicVenta_A> DetallePagInicVenta_A { get; set; }
        public virtual DbSet<DetallePagoCredito> DetallePagoCreditoes { get; set; }
        public virtual DbSet<DetalleProforma> DetalleProformas { get; set; }
        public virtual DbSet<DetalleReserva> DetalleReservas { get; set; }
        public virtual DbSet<DetalleVenta> DetalleVentas { get; set; }
        public virtual DbSet<DetalleVenta_A> DetalleVenta_A { get; set; }
        public virtual DbSet<Devolucion> Devolucions { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<Documento> Documentoes { get; set; }
        public virtual DbSet<Envase> Envases { get; set; }
        public virtual DbSet<EstadoC> EstadoCs { get; set; }
        public virtual DbSet<EstadoCliente> EstadoClientes { get; set; }
        public virtual DbSet<EstadoLote> EstadoLotes { get; set; }
        public virtual DbSet<EstadoOC> EstadoOCs { get; set; }
        public virtual DbSet<EstadoP> EstadoPs { get; set; }
        public virtual DbSet<EstadoPC> EstadoPCs { get; set; }
        public virtual DbSet<EstadoRendicion> EstadoRendicions { get; set; }
        public virtual DbSet<FlujoEfectivo> FlujoEfectivoes { get; set; }
        public virtual DbSet<FondoFijo> FondoFijoes { get; set; }
        public virtual DbSet<FondoFijoReposicion> FondoFijoReposicions { get; set; }
        public virtual DbSet<Grupo> Grupoes { get; set; }
        public virtual DbSet<InformeDiario> InformeDiarios { get; set; }
        public virtual DbSet<InformeDiarioDet> InformeDiarioDets { get; set; }
        public virtual DbSet<IngresosCab> IngresosCabs { get; set; }
        public virtual DbSet<Jerarquia> Jerarquias { get; set; }
        public virtual DbSet<LineaCredito> LineaCreditoes { get; set; }
        public virtual DbSet<ListaGasto> ListaGastos { get; set; }
        public virtual DbSet<LugarEntrega> LugarEntregas { get; set; }
        public virtual DbSet<Manzana> Manzanas { get; set; }
        public virtual DbSet<Marca> Marcas { get; set; }
        public virtual DbSet<MLM> MLMs { get; set; }
        public virtual DbSet<NivelMLM> NivelMLMs { get; set; }
        public virtual DbSet<Oferta> Ofertas { get; set; }
        public virtual DbSet<OrdenCompra> OrdenCompras { get; set; }
        public virtual DbSet<OrdenCompraConf> OrdenCompraConfs { get; set; }
        public virtual DbSet<OrdenCompraDetalle> OrdenCompraDetalles { get; set; }
        public virtual DbSet<Pedido> Pedidoes { get; set; }
        public virtual DbSet<PedidoDetalle> PedidoDetalles { get; set; }
        public virtual DbSet<PERIODO> PERIODOes { get; set; }
        public virtual DbSet<Persona> Personas { get; set; }
        public virtual DbSet<PlanCuentaFlujo> PlanCuentaFlujoes { get; set; }
        public virtual DbSet<PlanillaConfirmacion> PlanillaConfirmacions { get; set; }
        public virtual DbSet<PlanPagoCtaPCob> PlanPagoCtaPCobs { get; set; }
        public virtual DbSet<PlanPagoCtaPCob_A> PlanPagoCtaPCob_A { get; set; }
        public virtual DbSet<PlanPagoProf> PlanPagoProfs { get; set; }
        public virtual DbSet<PlanPagoRe> PlanPagoRes { get; set; }
        public virtual DbSet<PlanPagoVentAnt> PlanPagoVentAnts { get; set; }
        public virtual DbSet<PreAfiliado> PreAfiliadoes { get; set; }
        public virtual DbSet<PresupuestoProducto> PresupuestoProductos { get; set; }
        public virtual DbSet<Procedencia> Procedencias { get; set; }
        public virtual DbSet<Producto> Productoes { get; set; }
        public virtual DbSet<ProductoConceptoContable> ProductoConceptoContables { get; set; }
        public virtual DbSet<ProductoPrueba> ProductoPruebas { get; set; }
        public virtual DbSet<Proforma> Proformas { get; set; }
        public virtual DbSet<ProveedorProducto> ProveedorProductoes { get; set; }
        public virtual DbSet<Proyecto> Proyectos { get; set; }
        public virtual DbSet<Rendicion> Rendicions { get; set; }
        public virtual DbSet<RendicionCliente> RendicionClientes { get; set; }
        public virtual DbSet<RendicionDetalle> RendicionDetalles { get; set; }
        public virtual DbSet<RepAlmacen> RepAlmacens { get; set; }
        public virtual DbSet<RepCtaxPagar> RepCtaxPagars { get; set; }
        public virtual DbSet<RepTesoreria> RepTesorerias { get; set; }
        public virtual DbSet<Reserva> Reservas { get; set; }
        public virtual DbSet<SalidasCab> SalidasCabs { get; set; }
        public virtual DbSet<SerieIngreso> SerieIngresoes { get; set; }
        public virtual DbSet<SerieSalida> SerieSalidas { get; set; }
        public virtual DbSet<SeriesMovimiento> SeriesMovimientoes { get; set; }
        public virtual DbSet<SeriesProducto> SeriesProductos { get; set; }
        public virtual DbSet<SeriesProductosBaja> SeriesProductosBajas { get; set; }
        public virtual DbSet<SerieTraspaso> SerieTraspasoes { get; set; }
        public virtual DbSet<SubGrupo> SubGrupoes { get; set; }
        public virtual DbSet<Sucursal> Sucursals { get; set; }
        public virtual DbSet<Table_GlosaCorrectaP> Table_GlosaCorrectaP { get; set; }
        public virtual DbSet<tblMainMenuChoicesUsuario> tblMainMenuChoicesUsuarios { get; set; }
        public virtual DbSet<Tecnologia> Tecnologias { get; set; }
        public virtual DbSet<TerminosEntrega> TerminosEntregas { get; set; }
        public virtual DbSet<TerminosPago> TerminosPagoes { get; set; }
        public virtual DbSet<Tesoreria> Tesorerias { get; set; }
        public virtual DbSet<Tesoreria_Trans> Tesoreria_Trans { get; set; }
        public virtual DbSet<Tipo> Tipoes { get; set; }
        public virtual DbSet<TipoAccesorio> TipoAccesorios { get; set; }
        public virtual DbSet<TipoAlmacen> TipoAlmacens { get; set; }
        public virtual DbSet<TipoCambio> TipoCambios { get; set; }
        public virtual DbSet<TipoCliente> TipoClientes { get; set; }
        public virtual DbSet<TipoContrato> TipoContratoes { get; set; }
        public virtual DbSet<TipoContratosLegale> TipoContratosLegales { get; set; }
        public virtual DbSet<TipoCtaPorCobrar> TipoCtaPorCobrars { get; set; }
        public virtual DbSet<TipoCxPagar> TipoCxPagars { get; set; }
        public virtual DbSet<TipoDeNota> TipoDeNotas { get; set; }
        public virtual DbSet<TipoDoc> TipoDocs { get; set; }
        public virtual DbSet<TipoDocAux> TipoDocAuxes { get; set; }
        public virtual DbSet<TipoDocCtaxPagar> TipoDocCtaxPagars { get; set; }
        public virtual DbSet<TipoDocGarantia> TipoDocGarantias { get; set; }
        public virtual DbSet<TipoEstado> TipoEstadoes { get; set; }
        public virtual DbSet<TipoMovimientoTesoreria> TipoMovimientoTesorerias { get; set; }
        public virtual DbSet<TipoPago> TipoPagoes { get; set; }
        public virtual DbSet<TipoPagoAdicional> TipoPagoAdicionals { get; set; }
        public virtual DbSet<TipoPagoCxPagar> TipoPagoCxPagars { get; set; }
        public virtual DbSet<TipoProducto> TipoProductoes { get; set; }
        public virtual DbSet<TipoPSuper> TipoPSupers { get; set; }
        public virtual DbSet<TipoRendicion> TipoRendicions { get; set; }
        public virtual DbSet<TipoRotacion> TipoRotacions { get; set; }
        public virtual DbSet<TiposIngreso> TiposIngresos { get; set; }
        public virtual DbSet<TiposSalida> TiposSalidas { get; set; }
        public virtual DbSet<TipoTransaccion> TipoTransaccions { get; set; }
        public virtual DbSet<TipoTransporte> TipoTransportes { get; set; }
        public virtual DbSet<TipoVenta> TipoVentas { get; set; }
        public virtual DbSet<Tramo> Tramoes { get; set; }
        public virtual DbSet<Transporte> Transportes { get; set; }
        public virtual DbSet<Transportista> Transportistas { get; set; }
        public virtual DbSet<UnidadMedida> UnidadMedidas { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<Venta_A> Venta_A { get; set; }
        public virtual DbSet<VentaSerie_A> VentaSerie_A { get; set; }
        public virtual DbSet<VentaSerieProducto> VentaSerieProductoes { get; set; }
        public virtual DbSet<CalculoMora> CalculoMoras { get; set; }
        public virtual DbSet<Proyecto1> Proyectoes { get; set; }
        public virtual DbSet<actualizarMoraDaria> actualizarMoraDarias { get; set; }
        public virtual DbSet<cantCuotasPagada> cantCuotasPagadas { get; set; }
        public virtual DbSet<CtaporCobraDeMora> CtaporCobraDeMoras { get; set; }
        public virtual DbSet<ctaxcobrarDet> ctaxcobrarDets { get; set; }
        public virtual DbSet<ctaxcobrarDetmora> ctaxcobrarDetmoras { get; set; }
        public virtual DbSet<ctaxcobrarUltCuotaPagada> ctaxcobrarUltCuotaPagadas { get; set; }
        public virtual DbSet<CuotaPorPagar> CuotaPorPagars { get; set; }
        public virtual DbSet<detallePagoCredito2> detallePagoCredito2 { get; set; }
        public virtual DbSet<detalleventa1> detalleventa1 { get; set; }
        public virtual DbSet<difPagado> difPagados { get; set; }
        public virtual DbSet<fechaCuotaPorPagar> fechaCuotaPorPagars { get; set; }
        public virtual DbSet<moraExcel> moraExcels { get; set; }
        public virtual DbSet<moraUltimaFechaDePago> moraUltimaFechaDePagoes { get; set; }
        public virtual DbSet<moraVsPrestamo> moraVsPrestamoes { get; set; }
        public virtual DbSet<pagos24Octubre> pagos24Octubre { get; set; }
        public virtual DbSet<pagosdesc> pagosdescs { get; set; }
        public virtual DbSet<total_pagado> total_pagado { get; set; }
        public virtual DbSet<View_GlosaCorrectaProducto> View_GlosaCorrectaProducto { get; set; }
        public virtual DbSet<Vista_SumaSaldo> Vista_SumaSaldo { get; set; }
        public virtual DbSet<VistaCliente> VistaClientes { get; set; }
        public virtual DbSet<vw_CantCuotaDeuda> vw_CantCuotaDeuda { get; set; }
        public virtual DbSet<vw_CantCuotaPagada> vw_CantCuotaPagada { get; set; }
        public virtual DbSet<vw_gridMoraBookk_SAI> vw_gridMoraBookk_SAI { get; set; }
        public virtual DbSet<vw_gridPrestamosBookk> vw_gridPrestamosBookk { get; set; }
        public virtual DbSet<vw_Recuperado> vw_Recuperado { get; set; }
        public virtual DbSet<vw_SaldoCapital> vw_SaldoCapital { get; set; }
        public virtual DbSet<vw_saldoIntDevengado> vw_saldoIntDevengado { get; set; }
        public virtual DbSet<vw_SaldosPorCobrar> vw_SaldosPorCobrar { get; set; }
        public virtual DbSet<vw_UltCuotaPorPagar> vw_UltCuotaPorPagar { get; set; }
        public virtual DbSet<vw_ventaClientes> vw_ventaClientes { get; set; }
        public virtual DbSet<Vwt_CantidadClienteMora> Vwt_CantidadClienteMora { get; set; }
        public virtual DbSet<Vwt_ClienteAlDia> Vwt_ClienteAlDia { get; set; }
        public virtual DbSet<Vwt_CoutasFaltaPagarFija> Vwt_CoutasFaltaPagarFija { get; set; }
        public virtual DbSet<Vwt_CoutasFaltaPagarMora> Vwt_CoutasFaltaPagarMora { get; set; }
        public virtual DbSet<Vwt_CuotaPagadaFija> Vwt_CuotaPagadaFija { get; set; }
        public virtual DbSet<Vwt_CuotaPagadaMora> Vwt_CuotaPagadaMora { get; set; }
        public virtual DbSet<Vwt_DetalleCantidadMora> Vwt_DetalleCantidadMora { get; set; }
        public virtual DbSet<Vwt_DetalleClienteMora> Vwt_DetalleClienteMora { get; set; }
        public virtual DbSet<Vwt_DetalleFijaMoraFinal> Vwt_DetalleFijaMoraFinal { get; set; }
        public virtual DbSet<Vwt_DetelleFijaMora> Vwt_DetelleFijaMora { get; set; }
        public virtual DbSet<Vwt_TotalClienteMora> Vwt_TotalClienteMora { get; set; }
    
        [DbFunction("INVENTARIO_CONSTRUCTORA_OBELISCOEntities", "fn_MoviemtoXcliente")]
        public virtual IQueryable<fn_MoviemtoXcliente_Result> fn_MoviemtoXcliente(Nullable<int> codcliente)
        {
            var codclienteParameter = codcliente.HasValue ?
                new ObjectParameter("codcliente", codcliente) :
                new ObjectParameter("codcliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MoviemtoXcliente_Result>("[INVENTARIO_CONSTRUCTORA_OBELISCOEntities].[fn_MoviemtoXcliente](@codcliente)", codclienteParameter);
        }
    
        [DbFunction("INVENTARIO_CONSTRUCTORA_OBELISCOEntities", "fn_NotificacionPreventiva")]
        public virtual IQueryable<fn_NotificacionPreventiva_Result> fn_NotificacionPreventiva(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_NotificacionPreventiva_Result>("[INVENTARIO_CONSTRUCTORA_OBELISCOEntities].[fn_NotificacionPreventiva](@DateFrom, @DateTo)", dateFromParameter, dateToParameter);
        }
    
        public virtual int AdministracionReservaAutomatica()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AdministracionReservaAutomatica");
        }
    
        public virtual int crearCuotasDeMorasExistentes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearCuotasDeMorasExistentes");
        }
    
        public virtual int crearMorasFaltantes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearMorasFaltantes");
        }
    
        public virtual int insertar_persona(string codcliente, string nit, string ci, string nombrep, string apellido, string seg_apellido, string contacto, string ciudad, string direccion, string telefono, string correo, string sexo, string estado_c, Nullable<int> escliente)
        {
            var codclienteParameter = codcliente != null ?
                new ObjectParameter("codcliente", codcliente) :
                new ObjectParameter("codcliente", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var ciParameter = ci != null ?
                new ObjectParameter("ci", ci) :
                new ObjectParameter("ci", typeof(string));
    
            var nombrepParameter = nombrep != null ?
                new ObjectParameter("nombrep", nombrep) :
                new ObjectParameter("nombrep", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var seg_apellidoParameter = seg_apellido != null ?
                new ObjectParameter("seg_apellido", seg_apellido) :
                new ObjectParameter("seg_apellido", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("contacto", contacto) :
                new ObjectParameter("contacto", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estado_cParameter = estado_c != null ?
                new ObjectParameter("estado_c", estado_c) :
                new ObjectParameter("estado_c", typeof(string));
    
            var esclienteParameter = escliente.HasValue ?
                new ObjectParameter("escliente", escliente) :
                new ObjectParameter("escliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertar_persona", codclienteParameter, nitParameter, ciParameter, nombrepParameter, apellidoParameter, seg_apellidoParameter, contactoParameter, ciudadParameter, direccionParameter, telefonoParameter, correoParameter, sexoParameter, estado_cParameter, esclienteParameter);
        }
    
        public virtual int sp_ABM_PreAfiliado(Nullable<byte> accion, string cI, string nIT, string nombreP, string apellido, string seg_Apellido, string ciudad, string direccionDomicilio, string direccionTrabajo, string telefono, string correo, string sexo, string usuaReg, ObjectParameter respuesta)
        {
            var accionParameter = accion.HasValue ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(byte));
    
            var cIParameter = cI != null ?
                new ObjectParameter("CI", cI) :
                new ObjectParameter("CI", typeof(string));
    
            var nITParameter = nIT != null ?
                new ObjectParameter("NIT", nIT) :
                new ObjectParameter("NIT", typeof(string));
    
            var nombrePParameter = nombreP != null ?
                new ObjectParameter("NombreP", nombreP) :
                new ObjectParameter("NombreP", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var seg_ApellidoParameter = seg_Apellido != null ?
                new ObjectParameter("Seg_Apellido", seg_Apellido) :
                new ObjectParameter("Seg_Apellido", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var direccionDomicilioParameter = direccionDomicilio != null ?
                new ObjectParameter("DireccionDomicilio", direccionDomicilio) :
                new ObjectParameter("DireccionDomicilio", typeof(string));
    
            var direccionTrabajoParameter = direccionTrabajo != null ?
                new ObjectParameter("DireccionTrabajo", direccionTrabajo) :
                new ObjectParameter("DireccionTrabajo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var usuaRegParameter = usuaReg != null ?
                new ObjectParameter("UsuaReg", usuaReg) :
                new ObjectParameter("UsuaReg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ABM_PreAfiliado", accionParameter, cIParameter, nITParameter, nombrePParameter, apellidoParameter, seg_ApellidoParameter, ciudadParameter, direccionDomicilioParameter, direccionTrabajoParameter, telefonoParameter, correoParameter, sexoParameter, usuaRegParameter, respuesta);
        }
    
        public virtual int sp_ABM_Reserva1(Nullable<byte> accion, string codProforma, Nullable<int> codProyecto, string codCliente, string nombreCliente, string contacto, Nullable<double> tC, Nullable<System.DateTime> fechaProf, Nullable<System.DateTime> fechaVencProf, string glosa, string idVendedor, string codLote, string nombreLote, Nullable<double> precioUnitario, Nullable<double> precioBs, string usuaReg, Nullable<double> montoReservaBs, Nullable<double> montoReservaSus, ObjectParameter respuesta)
        {
            var accionParameter = accion.HasValue ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(byte));
    
            var codProformaParameter = codProforma != null ?
                new ObjectParameter("CodProforma", codProforma) :
                new ObjectParameter("CodProforma", typeof(string));
    
            var codProyectoParameter = codProyecto.HasValue ?
                new ObjectParameter("CodProyecto", codProyecto) :
                new ObjectParameter("CodProyecto", typeof(int));
    
            var codClienteParameter = codCliente != null ?
                new ObjectParameter("CodCliente", codCliente) :
                new ObjectParameter("CodCliente", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var tCParameter = tC.HasValue ?
                new ObjectParameter("TC", tC) :
                new ObjectParameter("TC", typeof(double));
    
            var fechaProfParameter = fechaProf.HasValue ?
                new ObjectParameter("FechaProf", fechaProf) :
                new ObjectParameter("FechaProf", typeof(System.DateTime));
    
            var fechaVencProfParameter = fechaVencProf.HasValue ?
                new ObjectParameter("FechaVencProf", fechaVencProf) :
                new ObjectParameter("FechaVencProf", typeof(System.DateTime));
    
            var glosaParameter = glosa != null ?
                new ObjectParameter("glosa", glosa) :
                new ObjectParameter("glosa", typeof(string));
    
            var idVendedorParameter = idVendedor != null ?
                new ObjectParameter("IdVendedor", idVendedor) :
                new ObjectParameter("IdVendedor", typeof(string));
    
            var codLoteParameter = codLote != null ?
                new ObjectParameter("CodLote", codLote) :
                new ObjectParameter("CodLote", typeof(string));
    
            var nombreLoteParameter = nombreLote != null ?
                new ObjectParameter("NombreLote", nombreLote) :
                new ObjectParameter("NombreLote", typeof(string));
    
            var precioUnitarioParameter = precioUnitario.HasValue ?
                new ObjectParameter("PrecioUnitario", precioUnitario) :
                new ObjectParameter("PrecioUnitario", typeof(double));
    
            var precioBsParameter = precioBs.HasValue ?
                new ObjectParameter("PrecioBs", precioBs) :
                new ObjectParameter("PrecioBs", typeof(double));
    
            var usuaRegParameter = usuaReg != null ?
                new ObjectParameter("UsuaReg", usuaReg) :
                new ObjectParameter("UsuaReg", typeof(string));
    
            var montoReservaBsParameter = montoReservaBs.HasValue ?
                new ObjectParameter("MontoReservaBs", montoReservaBs) :
                new ObjectParameter("MontoReservaBs", typeof(double));
    
            var montoReservaSusParameter = montoReservaSus.HasValue ?
                new ObjectParameter("MontoReservaSus", montoReservaSus) :
                new ObjectParameter("MontoReservaSus", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ABM_Reserva1", accionParameter, codProformaParameter, codProyectoParameter, codClienteParameter, nombreClienteParameter, contactoParameter, tCParameter, fechaProfParameter, fechaVencProfParameter, glosaParameter, idVendedorParameter, codLoteParameter, nombreLoteParameter, precioUnitarioParameter, precioBsParameter, usuaRegParameter, montoReservaBsParameter, montoReservaSusParameter, respuesta);
        }
    
        public virtual int sp_actualizar_mora()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actualizar_mora");
        }
    
        public virtual int sp_actualizar_mora_modificado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actualizar_mora_modificado");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GetClienteMoraDetalleXFase_Result> sp_GetClienteMoraDetalleXFase(Nullable<int> fase)
        {
            var faseParameter = fase.HasValue ?
                new ObjectParameter("fase", fase) :
                new ObjectParameter("fase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetClienteMoraDetalleXFase_Result>("sp_GetClienteMoraDetalleXFase", faseParameter);
        }
    
        public virtual ObjectResult<sp_getMovCajaIngDia_Result> sp_getMovCajaIngDia(Nullable<System.DateTime> f1, Nullable<System.DateTime> f2)
        {
            var f1Parameter = f1.HasValue ?
                new ObjectParameter("f1", f1) :
                new ObjectParameter("f1", typeof(System.DateTime));
    
            var f2Parameter = f2.HasValue ?
                new ObjectParameter("f2", f2) :
                new ObjectParameter("f2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getMovCajaIngDia_Result>("sp_getMovCajaIngDia", f1Parameter, f2Parameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_ModEstadoLote(string codLote)
        {
            var codLoteParameter = codLote != null ?
                new ObjectParameter("CodLote", codLote) :
                new ObjectParameter("CodLote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModEstadoLote", codLoteParameter);
        }
    
        public virtual ObjectResult<sp_MovimientoXcliente_Result> sp_MovimientoXcliente(Nullable<int> codcliente, Nullable<System.DateTime> f1, Nullable<System.DateTime> f2)
        {
            var codclienteParameter = codcliente.HasValue ?
                new ObjectParameter("codcliente", codcliente) :
                new ObjectParameter("codcliente", typeof(int));
    
            var f1Parameter = f1.HasValue ?
                new ObjectParameter("f1", f1) :
                new ObjectParameter("f1", typeof(System.DateTime));
    
            var f2Parameter = f2.HasValue ?
                new ObjectParameter("f2", f2) :
                new ObjectParameter("f2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MovimientoXcliente_Result>("sp_MovimientoXcliente", codclienteParameter, f1Parameter, f2Parameter);
        }
    
        public virtual int sp_print(Nullable<int> ids, string cadena)
        {
            var idsParameter = ids.HasValue ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(int));
    
            var cadenaParameter = cadena != null ?
                new ObjectParameter("cadena", cadena) :
                new ObjectParameter("cadena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_print", idsParameter, cadenaParameter);
        }
    
        public virtual ObjectResult<sp_RecuperacionCarteraCliente_Result> sp_RecuperacionCarteraCliente(Nullable<int> codCliente)
        {
            var codClienteParameter = codCliente.HasValue ?
                new ObjectParameter("codCliente", codCliente) :
                new ObjectParameter("codCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RecuperacionCarteraCliente_Result>("sp_RecuperacionCarteraCliente", codClienteParameter);
        }
    
        public virtual ObjectResult<sp_RecuperacionCarteraFase_Result> sp_RecuperacionCarteraFase(string fechaI, string fechaF)
        {
            var fechaIParameter = fechaI != null ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(string));
    
            var fechaFParameter = fechaF != null ?
                new ObjectParameter("fechaF", fechaF) :
                new ObjectParameter("fechaF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RecuperacionCarteraFase_Result>("sp_RecuperacionCarteraFase", fechaIParameter, fechaFParameter);
        }
    
        public virtual ObjectResult<sp_RecuperacionCarteraFecha_Result> sp_RecuperacionCarteraFecha(Nullable<System.DateTime> fech1, Nullable<System.DateTime> fech2)
        {
            var fech1Parameter = fech1.HasValue ?
                new ObjectParameter("fech1", fech1) :
                new ObjectParameter("fech1", typeof(System.DateTime));
    
            var fech2Parameter = fech2.HasValue ?
                new ObjectParameter("fech2", fech2) :
                new ObjectParameter("fech2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RecuperacionCarteraFecha_Result>("sp_RecuperacionCarteraFecha", fech1Parameter, fech2Parameter);
        }
    
        public virtual ObjectResult<sp_RecuperacionCarteraProyecto_Result> sp_RecuperacionCarteraProyecto(string codP)
        {
            var codPParameter = codP != null ?
                new ObjectParameter("codP", codP) :
                new ObjectParameter("codP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RecuperacionCarteraProyecto_Result>("sp_RecuperacionCarteraProyecto", codPParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_Traer_Lote_Result> sp_Traer_Lote(Nullable<int> codProyecto, string codManzana)
        {
            var codProyectoParameter = codProyecto.HasValue ?
                new ObjectParameter("CodProyecto", codProyecto) :
                new ObjectParameter("CodProyecto", typeof(int));
    
            var codManzanaParameter = codManzana != null ?
                new ObjectParameter("CodManzana", codManzana) :
                new ObjectParameter("CodManzana", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_Lote_Result>("sp_Traer_Lote", codProyectoParameter, codManzanaParameter);
        }
    
        public virtual ObjectResult<sp_Traer_Lote_CodProd_Result> sp_Traer_Lote_CodProd(string codProd)
        {
            var codProdParameter = codProd != null ?
                new ObjectParameter("CodProd", codProd) :
                new ObjectParameter("CodProd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_Lote_CodProd_Result>("sp_Traer_Lote_CodProd", codProdParameter);
        }
    
        public virtual ObjectResult<sp_Traer_Lote_NroParte_Result> sp_Traer_Lote_NroParte(string nroParte)
        {
            var nroParteParameter = nroParte != null ?
                new ObjectParameter("NroParte", nroParte) :
                new ObjectParameter("NroParte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_Lote_NroParte_Result>("sp_Traer_Lote_NroParte", nroParteParameter);
        }
    
        public virtual ObjectResult<sp_Traer_Manzana_Result> sp_Traer_Manzana(Nullable<int> codProy)
        {
            var codProyParameter = codProy.HasValue ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_Manzana_Result>("sp_Traer_Manzana", codProyParameter);
        }
    
        public virtual ObjectResult<sp_Traer_Persona_DocIdent_Result> sp_Traer_Persona_DocIdent(string docIdent)
        {
            var docIdentParameter = docIdent != null ?
                new ObjectParameter("DocIdent", docIdent) :
                new ObjectParameter("DocIdent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_Persona_DocIdent_Result>("sp_Traer_Persona_DocIdent", docIdentParameter);
        }
    
        public virtual ObjectResult<sp_Traer_Persona_Usuario_Result> sp_Traer_Persona_Usuario(string lOGIN, string clave)
        {
            var lOGINParameter = lOGIN != null ?
                new ObjectParameter("LOGIN", lOGIN) :
                new ObjectParameter("LOGIN", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_Persona_Usuario_Result>("sp_Traer_Persona_Usuario", lOGINParameter, claveParameter);
        }
    
        public virtual ObjectResult<sp_Traer_PreAfiliado_Result> sp_Traer_PreAfiliado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_PreAfiliado_Result>("sp_Traer_PreAfiliado");
        }
    
        public virtual ObjectResult<sp_Traer_Proyectos_Result> sp_Traer_Proyectos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Traer_Proyectos_Result>("sp_Traer_Proyectos");
        }
    
        public virtual ObjectResult<string> sp_Traer_UltimaProforma()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Traer_UltimaProforma");
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spt_NotificacionPreventiva_Result> spt_NotificacionPreventiva(Nullable<int> dias)
        {
            var diasParameter = dias.HasValue ?
                new ObjectParameter("dias", dias) :
                new ObjectParameter("dias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spt_NotificacionPreventiva_Result>("spt_NotificacionPreventiva", diasParameter);
        }
    }
}

@{
    ViewBag.Title = "Fase";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var fase = @ViewBag.fase;
}
<style>

    .dataTables_scrollBody thead {
        visibility: hidden;
    }

    .group {
        background-color: #333 !important;
        font-size: 11px;
        color: #fff !important;
        opacity: 0.7;
    }

    .groupTitle {
        font-size: 14px;
        font-weight: bold;
    }

    .medal {
        margin-left: 10px;
        background-color: black;
        padding: 2px;
        border-radius: 2px;
    }

    .gold {
        color: gold;
    }

    .silver {
        color: silver;
    }

    .bronze {
        color: lightsalmon;
    }

    .flag {
        margin-left: 4px;
        position: relative;
        top: 2px;
    }
</style>
<link href="~/bower_components/chat-popup/css/chat.css" rel="stylesheet" />
<script src="~/Scripts/GroupRowInnerRenderer.js"></script>
<script src="~/bower_components/chat-popup/js/chat.js"></script>
<section class="content-header">
    <h1>
        Listado de Clientes
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">General Elements</li>
    </ol>
</section>
@*@using (Html.BeginForm("ExportToExcel", "Home", FormMethod.Post))
    {*@

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Cliente de Fase @ViewBag.fase</h3>
                    <input type="hidden" id="fase" name="fase" value="@ViewBag.fase" />
                    <input class="btn btn-primary   pull-right   margin-r-5" type="submit" value="Exportar excel" onclick="ExportToExcel();" />

                    <input class="btn btn-primary   pull-right   margin-r-5" type="button" value="Exportar excel" onclick="Expot();" />
                </div>
                <div class="box-body" id="ListaContenidosContainer">
                    <div id="gridDetalle" style="height: 450px;" class="ag-theme-balham"></div>
                </div>
            </div>
        </div>
    </div>
</section>
@*}*@

<script>
    //$(function () {
    //    $('#example1').DataTable();
    //})
  //  public string CodCliente { get; set; }
		//public string NombreCompleto { get; set; }
		//public double MontoCuota { get; set; }
		//public int NroCuota { get; set; }
		//public double SaldoCuota { get; set; }
		//public DateTime Fecha { get; set; }
		//public int CantidadCouta { get; set; }
		//public string Telefono { get; set; }
		//public string Codigo { get; set; }
		//public string CodMora { get; set; }
      //   public int NroCuotas { get; set; }
		//public double Tc { get; set; }
    var columnDefsDetalle = [
        { headerName: 'Cod Cliente', field: 'CodCliente' },
        { headerName: 'Couta fija', field: 'MontoCuota', aggFunc: 'sum' },
        { headerName: 'Interes Mora', field: 'SaldoCuota', aggFunc: 'sum' },
        { headerName: 'CantidadCouta', field: 'CantidadCouta', aggFunc: 'count', hide: true, sort: 'asc' },
        { headerName: 'Total Sus', field: 'TotalSus', valueGetter: 'data.MontoCuota + data.SaldoCuota', aggFunc: 'sum' },
        { headerName: 'Total Bs', field: 'TotalBs', valueGetter: '(data.MontoCuota + data.SaldoCuota)*data.Tc', aggFunc: 'sum' },
        { headerName: 'Nro Cuota', field: 'NroCuota'},
        { headerName: 'Telefono', field: 'Telefono' },
        { headerName: 'Fecha Pago', field: 'Fecha' },
        {
            field: 'NombreCompleto',
            rowGroup: true,
            hide: true,
            valueGetter: countryValueGetter,
            keyCreator: countryKeyCreator
        }
    ];
    var rowData;
    var gridOptionsDetalle = {

        columnDefs: columnDefsDetalle,
        defaultColDef: {
            width: 150
        },
        rowData: rowData,
        groupUseEntireRow: true,
        enableRangeSelection: true,
        enableSorting: true,
        enableFilter: true,
        enableColResize: true,

        //autoGroupColumnDef: {
        //    headerName: 'Cod Cliente',
        //    width: 300,
        //    field: 'CodCliente',
        //},
        components: {
            groupRowInnerRenderer: GroupRowInnerRenderer
        },
        groupRowInnerRenderer: 'groupRowInnerRenderer',
       // groupIncludeFooter: true,
        //groupIncludeTotalFooter: true,
        animateRows: true
    };
    //var gridOptionsDetalle = {
    //    columnDefs: columnDefsDetalle,
    //    rowData: null,
    //    enableRangeSelection: true,
    //    enableSorting: true,
    //    enableFilter: true,
    //    enableColResize: true,
    //    groupUseEntireRow: true,
    //    autoGroupColumnDef: {
    //        headerName: 'Cod Cliente',
    //        width: 300,
    //        field: 'CodCliente',
    //    },
    //    components: {
    //        groupRowInnerRenderer: GroupRowInnerRenderer
    //    },
    //    groupRowInnerRenderer: 'groupRowInnerRenderer',
    //        groupIncludeFooter: true,
    //    groupIncludeTotalFooter: true
    //};

    function countryKeyCreator(params) {
        var countryObject = params.value;
        return countryObject.name;
    }
    function countryValueGetter(params) {
        // hack the data  - replace the country with an object of country name and code
        var countryName = params.data.NombreCompleto;
        var countryCode = params.data.Codigo;
        return {
            name: countryName,
            code: countryCode
        };
    }
    function myFunction(id) {

        //register_popup("22", id);
        getCodCliente(id)
        alert(id);
    };
    function getCodCliente(id) {
        $.ajax({
            url: "@Url.Action("GetCliente", "Home")",
            cache: false,
            data: {
                nombre: id
            },
            type: "POST"
            }).done(function (html) {
                var lista = html;
                if (lista.length==1) {

                    lista.forEach(function (itm) {
                        SendUrl(itm.Key);
                        console.log(itm.Key);

                    }
                    );

                    }else {
                 if (lista.length == 0) {
                    error("No Elementos para mostrar");
            }else {

            }

              }
            }).fail(function (resp) {
                console.log(resp.responseText);
            }).always(function () {
                console.log("Se completo la operacon exito");
            });
    }
    function SendUrl(codigo) {
        var url = "@Url.Action("GetNextPage","Home")" + "?id=" + codigo;

        window.open(url, "_blank");
    }
    function SendUrl(codigo) {
        var url = "@Url.Action("GetNextPage","Home")" + "?id=" + codigo;

        window.open(url, "_blank");
    }
    function currencyNroCuota(params) {
        var s1 = "" + formatToString(params.data.NroCuota);
        var s2 = "" + formatToString( params.data.NroCuotas);
        return s1 + '/' + s2;

    }
    function formatToString(number) {
        return number.ToString();
    }
    function currencyTotalBs(params) {
        var s = params.data.MontoCuota + params.data.SaldoCuota;
        return s * params.data.Tc;
    }
    function currencyFormatter(params) {
        if (params != null) {
            return toDateFromAspNet(params.data.Fecha);
        } else {
            return "";
        }

    }


    function toDateFromAspNet (dt) {
        var dte = eval("new " + dt.replace(/\//g, '') + ";");
        dte.setMinutes(dte.getMinutes() - dte.getTimezoneOffset());

        var today = new Date(dte);
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!

        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }
        if (mm < 10) {
            mm = '0' + mm;
        }
        var today = dd + '/' + mm + '/' + yyyy;
        return today;
    }
    $(document).ready(function () {
        ListarDetalle();
    });
    function ListarDetalle() {

        var idf=@fase;
        $.ajax({
            url: "@Url.Action("FaseDetalle", "Home")",
            cache: false,
            data: {
                id: idf
            },
            type: "POST"
        }).done(function (html) {
            var gridDiv = document.querySelector('#gridDetalle');
            rowData = html;
            createGlobal(gridOptionsDetalle, gridDiv);
            //setDataSource(html, gridOptionsDetalle);
            //rowData = html;
            rowData.forEach(function (item) {
                item.Fecha = toDateFromAspNet(item.Fecha);
            });
            gridOptionsDetalle.api.setRowData(rowData);
        }).fail(function (resp) {
            console.log(resp.responseText);
        }).always(function () {
            console.log(" se ha completado");
        });
    }


</script>
